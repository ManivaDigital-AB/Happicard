# Generated by Django 3.1.3 on 2021-03-17 06:49

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255, verbose_name='First name')),
                ('last_name', models.CharField(max_length=255, verbose_name='Last name')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.user')),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.user',),
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='accounts.user')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('company_address', models.CharField(blank=True, max_length=255, null=True)),
                ('company_role', models.CharField(blank=True, max_length=255, null=True)),
                ('corporate_form', models.CharField(blank=True, max_length=255, null=True)),
                ('company_store_category', models.CharField(blank=True, choices=[('Mode', 'Mode'), ('Mode kvinna', 'Mode kvinna'), ('Mode herr', 'Mode herr'), ('Hus & Hem', 'Hus & Hem'), ('Livsmedel', 'Livsmedel'), ('Mat & Dryck', 'Mat & Dryck'), ('Musik, Böcker & Spel', 'Musik, Böcker & Spel'), ('Semester & Resor', 'Semester & Resor'), ('Underhållning & Upplevelser', 'Underhållning & Upplevelser'), ('Annat', 'Annat')], max_length=100, null=True, verbose_name='Store Category')),
                ('company_ngo_category', models.CharField(blank=True, choices=[('Anhörigstöd', 'Anhörigstöd'), ('Barn', 'Barn'), ('Bevarande projekt', 'Bevarande projekt'), ('Fadderverksamhet', 'Fadderverksamhet'), ('Familjer', 'Familjer'), ('Flyktingar', 'Flyktingar'), ('Förebyggande arbete', 'Förebyggande arbete'), ('Föräldralösa barn', 'Föräldralösa barn'), ('Hemlösa', 'Hemlösa'), ('Hjälp till enskilda', 'Hjälp till enskilda'), ('Jordbruk', 'Jordbruk'), ('Jämställdhet', 'Jämställdhet'), ('Katastrofhjälp', 'Katastrofhjälp'), ('Kvinnor', 'Kvinnor'), ('Mikrolån/Mikrokrediter', 'Mikrolån/Mikrokrediter'), ('Personalutveckling', 'Personalutveckling'), ('Rehabilitering', 'Rehabilitering'), ('Rättshjälp', 'Rättshjälp'), ('Second hand', 'Second hand'), ('Sjukhus/Vårdhem/Äldreboende', 'Sjukhus/Vårdhem/Äldreboende'), ('Skyddat boende', 'Skyddat boende'), ('Telefonjour', 'Telefonjour'), ('Ungdom', 'Ungdom'), ('Utbildning - grund', 'Utbildning - grund'), ('Utbildning - högre', 'Utbildning - högre'), ('Utbildning - yrkes', 'Utbildning - yrkes'), ('Vatten/Sanitets projekt', 'Vatten/Sanitets projekt'), ('Verksamhet för sjuka', 'Verksamhet för sjuka'), ('Volontärer', 'Volontärer'), ('Vuxna', 'Vuxna'), ('Äldre', 'Äldre'), ('Annat', 'Annat')], max_length=100, null=True, verbose_name='NGO Category')),
                ('company_website', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('comments', models.TextField(blank=True, max_length=500, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('accounts.user',),
        ),
    ]
