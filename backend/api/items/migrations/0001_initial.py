# Generated by Django 3.1.3 on 2021-03-17 06:49

import backend.settings.storage_backends
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('price_option_1', models.PositiveIntegerField(default=0)),
                ('price_option_2', models.PositiveIntegerField(default=0)),
                ('price_option_3', models.PositiveIntegerField(default=0)),
                ('rebate_code_1', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('rebate_code_2', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('rebate_code_3', models.CharField(blank=True, max_length=200, null=True, unique=True)),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='Description')),
                ('tax_amount', models.IntegerField(default=0)),
                ('online', models.BooleanField(default=True)),
                ('premium', models.BooleanField(default=False)),
                ('redeem_website', models.CharField(blank=True, max_length=50)),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='published', max_length=10)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-published',),
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.item')),
                ('image', models.FileField(storage=backend.settings.storage_backends.CampaignStorage(), upload_to='')),
                ('ngo_category', models.CharField(blank=True, choices=[('Anhörigstöd', 'Anhörigstöd'), ('Barn', 'Barn'), ('Bevarande projekt', 'Bevarande projekt'), ('Fadderverksamhet', 'Fadderverksamhet'), ('Familjer', 'Familjer'), ('Flyktingar', 'Flyktingar'), ('Förebyggande arbete', 'Förebyggande arbete'), ('Föräldralösa barn', 'Föräldralösa barn'), ('Hemlösa', 'Hemlösa'), ('Hjälp till enskilda', 'Hjälp till enskilda'), ('Jordbruk', 'Jordbruk'), ('Jämställdhet', 'Jämställdhet'), ('Katastrofhjälp', 'Katastrofhjälp'), ('Kvinnor', 'Kvinnor'), ('Mikrolån/Mikrokrediter', 'Mikrolån/Mikrokrediter'), ('Personalutveckling', 'Personalutveckling'), ('Rehabilitering', 'Rehabilitering'), ('Rättshjälp', 'Rättshjälp'), ('Second hand', 'Second hand'), ('Sjukhus/Vårdhem/Äldreboende', 'Sjukhus/Vårdhem/Äldreboende'), ('Skyddat boende', 'Skyddat boende'), ('Telefonjour', 'Telefonjour'), ('Ungdom', 'Ungdom'), ('Utbildning - grund', 'Utbildning - grund'), ('Utbildning - högre', 'Utbildning - högre'), ('Utbildning - yrkes', 'Utbildning - yrkes'), ('Vatten/Sanitets projekt', 'Vatten/Sanitets projekt'), ('Verksamhet för sjuka', 'Verksamhet för sjuka'), ('Volontärer', 'Volontärer'), ('Vuxna', 'Vuxna'), ('Äldre', 'Äldre'), ('Annat', 'Annat')], max_length=100, null=True, verbose_name='Campaign Category')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
            },
            bases=('items.item',),
        ),
        migrations.CreateModel(
            name='GiftCard',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='items.item')),
                ('image', models.FileField(storage=backend.settings.storage_backends.GiftCardStorage(), upload_to='')),
                ('has_offer', models.BooleanField(default=False)),
                ('discount_price', models.IntegerField(default=0)),
                ('store_category', models.CharField(blank=True, choices=[('Mode', 'Mode'), ('Mode kvinna', 'Mode kvinna'), ('Mode herr', 'Mode herr'), ('Hus & Hem', 'Hus & Hem'), ('Livsmedel', 'Livsmedel'), ('Mat & Dryck', 'Mat & Dryck'), ('Musik, Böcker & Spel', 'Musik, Böcker & Spel'), ('Semester & Resor', 'Semester & Resor'), ('Underhållning & Upplevelser', 'Underhållning & Upplevelser'), ('Annat', 'Annat')], max_length=100, null=True, verbose_name='Gift Card Category')),
            ],
            options={
                'verbose_name': 'Gift Card',
                'verbose_name_plural': 'Gift Cards',
            },
            bases=('items.item',),
        ),
    ]
